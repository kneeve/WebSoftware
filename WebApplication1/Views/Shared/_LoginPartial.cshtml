@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<link rel="stylesheet" href="~/css/site.css" />
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

	<ul class="navbar-nav">
		@{
			var adminRole = User.Claims.Where(o => o.Value == "Admin");
			var instrRole = User.Claims.Where(o => o.Value == "Instructor");
			var chairRole = User.Claims.Where(o => o.Value == "Chair");
			var Role_Message = "";
			if (adminRole.Count() > 0)
			{
				Role_Message = "Adminstrator";
			}
			else if (instrRole.Count() > 0)
			{
				Role_Message = "Instructor";
			}
			else if (chairRole.Count() > 0)
			{
				Role_Message = "Chair";
			}
		}

		@if (SignInManager.IsSignedIn(User))
		{
			<li class="nav-item">
				<a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User): @Role_Message</a>
			</li>
			<li class="nav-item">
				<form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("/Index", new { area = "" })" method="post" >
					<button id="logout" type="submit" class="nav-link btn text-white">Logout</button>
				</form>
			</li>
		}
		else
		{
			<li class="nav-item">
				<a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
			</li>
			<li class="nav-item">
				<a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
			</li>
		}
	</ul>
